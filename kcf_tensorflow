설치해야 할 패키지
TensorFlow 설치 라즈베리파이 4에서는 기본적으로 TensorFlow 설치가 까다로울 수 있습니다. 하지만, 라즈베리파이용 경량화된 버전이 제공되므로 다음 명령으로 설치합니다:

bash
코드 복사
pip3 install tensorflow==2.10.0
OpenCV 설치 OpenCV를 설치하려면 컴파일 과정이 필요할 수 있지만, 간단히 다음 명령어로도 설치해볼 수 있습니다:

bash
코드 복사
sudo apt-get install python3-opencv
또는 PyPi에서 설치:

bash
코드 복사
pip3 install opencv-python
Pillow 설치

bash
코드 복사
pip3 install pillow
NumPy 설치

bash
코드 복사
pip3 install numpy
libcamera-dev 및 종속성 설치 라즈베리파이의 기본 카메라를 사용할 경우 필요한 라이브러리 설치:

bash
코드 복사
sudo apt-get install libatlas-base-dev libhdf5-dev libhdf5-serial-dev libqtwebkit4 libqt4-test
V4L2 Loopback 모듈 설치 (필요 시)

bash
코드 복사
sudo apt-get install v4l-utils



라즈베리파이에서 OpenCV로 카메라를 제어할 때 cv2.VideoCapture(0) 대신 libcamera를 사용하는 것이 더 안정적일 수 있습니다. 
이와 관련된 부분은 다음과 같이 수정할 수 있습니다.

import tensorflow as tf
import numpy as np
import cv2
from tensorflow.keras.models import load_model
from PIL import Image
import subprocess

# 모델 및 레이블 파일 절대 경로 설정
model_path = '/home/pi/converted_keras/keras_model.h5'  # 라즈베리파이에 맞게 경로 수정
labels_path = '/home/pi/converted_keras/labels.txt'

# 모델 로드
model = load_model(model_path)

# 클래스 이름 로드
with open(labels_path, 'r', encoding='utf-8') as f:
    class_names = [line.strip() for line in f.readlines()]

# 이미지 전처리 함수
def preprocess_image(image):
    image = Image.fromarray(image)
    image = image.resize((224, 224))  # 모델에 맞게 이미지 크기 조정
    image = np.array(image) / 255.0  # 스케일링
    image = np.expand_dims(image, axis=0)  # 배치 차원 추가
    return image

# libcamera로 사진 촬영 함수
def capture_image():
    command = "libcamera-jpeg -o temp.jpg --width 640 --height 480 --nopreview"
    subprocess.run(command, shell=True)
    image = cv2.imread("temp.jpg")
    return image

# 프로그램 시작
while True:
    # libcamera로 이미지 캡처
    frame = capture_image()

    if frame is None:
        print("프레임을 읽을 수 없습니다.")
        break

    # 이미지 전처리
    image = preprocess_image(frame)

    # 예측 수행
    predictions = model.predict(image)
    predicted_class = class_names[np.argmax(predictions)]

    # 결과 출력
    cv2.putText(frame, f'Predicted: {predicted_class}', (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)
    cv2.imshow('Webcam', frame)

    # 'q' 키를 누르면 종료
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 창 닫기
cv2.destroyAllWindows()



라즈베리파이 4에 Keras와 TensorFlow를 설치

1. 필수 패키지 업데이트 및 설치
먼저, 시스템을 업데이트하고 필수 패키지를 설치하세요:

bash
코드 복사
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install python3-dev python3-pip python3-venv libatlas-base-dev
2. 가상환경 생성 및 활성화
TensorFlow와 Keras를 설치할 때 가상환경을 사용하는 것이 좋습니다. 이렇게 하면 다른 프로젝트와 충돌 없이 독립적으로 관리할 수 있습니다.

bash
코드 복사
python3 -m venv keras-env
source keras-env/bin/activate
3. TensorFlow 경량화 버전 설치
라즈베리파이에서는 TensorFlow의 공식 경량화 버전인 tflite-runtime을 설치하는 것이 좋지만, Keras와 함께 사용하려면 TensorFlow Lite 대신 일반 TensorFlow를 설치할 수 있습니다. 그러나 일반 TensorFlow는 설치가 오래 걸리고 시스템 자원을 많이 사용합니다.

라즈베리파이용 TensorFlow 경량화 버전 설치:

bash
코드 복사
pip install tensorflow
설치가 오래 걸릴 수 있으니 기다려주세요.

4. Keras 설치
TensorFlow를 설치하면 Keras가 포함되어 있기 때문에 별도로 설치할 필요가 없습니다. 하지만 Keras가 없는 경우 직접 설치할 수도 있습니다.

bash
코드 복사
pip install keras
5. 기타 필수 라이브러리 설치
프로젝트에서 사용할 라이브러리들을 설치하세요:

bash
코드 복사
pip install numpy opencv-python pillow
6. 설치 확인
설치가 제대로 되었는지 확인하려면 Python 인터프리터에서 다음 명령을 입력해 보세요:

python
코드 복사
import tensorflow as tf
import keras

print(tf.__version__)
print(keras.__version__)
버전 정보가 출력되면 성공적으로 설치된 것입니다.

참고사항
설치 중 메모리 부족 문제 발생 시: 라즈베리파이는 메모리가 제한적이므로 설치 중 문제가 발생할 수 있습니다.
이를 방지하기 위해 스왑 메모리를 늘리거나 외장 하드디스크를 사용해보세요.

권장 사양: TensorFlow를 실행할 때 성능이 저하될 수 있으므로, 
가능하다면 모델 학습은 PC에서 완료하고, 
라즈베리파이에서는 추론(예측) 작업만 수행하는 것이 좋습니다.


