converted_keras 폴더 다운 두개의 파일이 존재
keras_model.h5
labels.txt



1. Anaconda 환경 생성 및 활성화
Anaconda Prompt를 열고 새로운 환경을 생성하고 활성화

conda create -n image_model_env python=3.7
conda activate image_model_env


2. 필요한 패키지 설치
pip install tensorflow==2.4.1
pip install opencv-python
pip install numpy pillow

3. Python 스크립트 작성

import tensorflow as tf
import numpy as np
import cv2
from tensorflow.keras.models import load_model
from PIL import Image

# 모델 및 레이블 파일 절대 경로 설정
model_path = 'C:/Users/sm759/converted_keras/keras_model.h5'
labels_path = 'C:/Users/sm759/converted_keras/labels.txt'

# 모델 로드
model = load_model(model_path)

# 클래스 이름 로드
with open(labels_path, 'r') as f:
    class_names = [line.strip() for line in f.readlines()]

# 이미지 전처리 함수
def preprocess_image(image):
    image = Image.fromarray(image)
    image = image.resize((224, 224))  # 모델에 맞게 이미지 크기 조정
    image = np.array(image) / 255.0  # 스케일링
    image = np.expand_dims(image, axis=0)  # 배치 차원 추가
    return image

# 외부 웹캠 인덱스 설정 (기본적으로 1번 웹캠으로 설정)
camera_index = 1
cap = cv2.VideoCapture(camera_index)

if not cap.isOpened():
    print("웹캠을 열 수 없습니다.")
    exit()

while True:
    ret, frame = cap.read()
    if not ret:
        print("프레임을 읽을 수 없습니다.")
        break

    # 이미지 전처리
    image = preprocess_image(frame)

    # 예측 수행
    predictions = model.predict(image)
    predicted_class = class_names[np.argmax(predictions)]

    # 결과 출력
    cv2.putText(frame, f'Predicted: {predicted_class}', (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)
    cv2.imshow('Webcam', frame)

    # 'q' 키를 누르면 종료
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 웹캠 및 창 닫기
cap.release()
cv2.destroyAllWindows()




4. 스크립트 실행
Anaconda 환경이 활성화된 상태에서 teachablemachine.py 스크립트를 실행
conda activate image_model_env
cd C:\Users\sm759\converted_keras
python teachablemachine.py


