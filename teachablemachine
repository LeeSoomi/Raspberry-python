1. 파일 전송:
metadata.json, model.json, weights.bin 파일을 라즈베리파이로 전송


2. 필요한 라이브러리 설치:
sudo apt-get update
sudo apt-get install python3-pip
pip3 install tensorflow
pip3 install numpy
pip3 install opencv-python
pip3 install pillow

-1. Python과 pip 확인
python3 --version
pip3 --version

-2. TensorFlow 확인
python3 -c "import tensorflow as tf; print(tf.__version__)"

-3. NumPy 확인
python3 -c "import numpy as np; print(np.__version__)"


-4. OpenCV 확인
python3 -c "import cv2; print(cv2.__version__)"

-5. Pillow 확인
python3 -c "from PIL import Image; print(Image.__version__)"


3. 코드
import tensorflow as tf
import numpy as np
import cv2
from keras.models import load_model
from PIL import Image

# 모델 및 레이블 파일 절대 경로 설정
model_path = '/home/PDY/cos/converted_keras/keras_model.h5'
labels_path = '/home/PDY/cos/converted_keras/labels.txt'

# 모델 로드
model = load_model(model_path)

# 클래스 이름 로드
with open(labels_path, 'r') as f:
    class_names = [line.strip() for line in f.readlines()]

# 이미지 전처리 함수
def preprocess_image(image):
    image = Image.fromarray(image)
    image = image.resize((224, 224))  # 모델에 맞게 이미지 크기 조정
    image = np.array(image) / 255.0  # 스케일링
    image = np.expand_dims(image, axis=0)  # 배치 차원 추가
    return image

# 웹캠 초기화
cap = cv2.VideoCapture(0)

if not cap.isOpened():
    print("웹캠을 열 수 없습니다.")
    exit()

while True:
    ret, frame = cap.read()
    if not ret:
        print("프레임을 읽을 수 없습니다.")
        break

    # 이미지 전처리
    image = preprocess_image(frame)

    # 예측 수행
    predictions = model.predict(image)
    predicted_class = class_names[np.argmax(predictions)]

    # 결과 출력
    cv2.putText(frame, f'Predicted: {predicted_class}', (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)
    cv2.imshow('Webcam', frame)

    # 'q' 키를 누르면 종료
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 웹캠 및 창 닫기
cap.release()
cv2.destroyAllWindows()



4. 스크립트 실행
python3 teachablemachine.py  실행




1. 빌드 도구 설치
먼저 필요한 빌드 도구들을 수동으로 설치
sudo apt-get update
sudo apt-get install -y build-essential cmake libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
sudo apt-get install -y python3-dev python3-pip python3-numpy
sudo apt-get install -y libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev

2. scikit-build 및 setuptools 최신 버전 설치
다음으로 scikit-build 및 setuptools를 최신 버전으로 설치
pip install --upgrade pip
pip install --upgrade setuptools
pip install scikit-build

3. OpenCV 설치
pip install opencv-python




