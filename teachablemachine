1. 파일 전송:
metadata.json, model.json, weights.bin 파일을 라즈베리파이로 전송


2. 필요한 라이브러리 설치:
sudo apt-get update
sudo apt-get install python3-pip
pip3 install tensorflow
pip3 install numpy
pip3 install opencv-python
pip3 install pillow

-1. Python과 pip 확인
python3 --version
pip3 --version

-2. TensorFlow 확인
python3 -c "import tensorflow as tf; print(tf.__version__)"

-3. NumPy 확인
python3 -c "import numpy as np; print(np.__version__)"


-4. OpenCV 확인
python3 -c "import cv2; print(cv2.__version__)"

-5. Pillow 확인
python3 -c "from PIL import Image; print(Image.__version__)"


3. 코드
import tensorflow as tf
import numpy as np
import cv2
from PIL import Image

# JSON 파일 경로를 수정합니다.
metadata_path = "metadata.json"
model_path = "model.json"
weights_path = "weights.bin"

# 모델 로드
with open(metadata_path, 'r') as f:
    metadata = json.load(f)

model = tf.keras.models.model_from_json(metadata['modelTopology'])
model.load_weights(weights_path)

# 웹캠에서 비디오 캡처
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break

    img = cv2.resize(frame, (224, 224))
    img = img / 255.0
    img = np.expand_dims(img, axis=0)

    # 예측
    predictions = model.predict(img)
    class_index = np.argmax(predictions[0])
    confidence = predictions[0][class_index]

    # 클래스 이름
    classes = ["Remote", "Mouse"]
    class_name = classes[class_index]

    # 화면에 출력
    cv2.putText(frame, f"{class_name}: {confidence:.2f}", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
    cv2.imshow("Webcam", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()



4. 스크립트 실행
python3 teachablemachine.py  실행
