2024/10월 기준

1. 매직미러 소프트웨어 설치 
매직미러는 아래 링크의 가이드를 따라서 설치 하면 된다. 하나씩 따라 해 보기로 하자. 
Installation &Usage | MagicMirror² Documentation
설치 패키지 버전이 최신으로 바뀌기 때문에 항상 위 링크를 확인하고 최신 상태로 설치하는 것이 좋다. 

~$  curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
~$  sudo apt-get install -y nodejs

~$  git clone https://github.com/MichMich/MagicMirror
매직미러 리포지토리를 통째로 라즈베리파이로 복사 한다.

~$  cd MagicMirror 
매직미러 폴더로 이동한다. 

~$  npm install
~$  cp config/config.js.sample config/config.js


config.js 파일을 열어서 
language와 local을 한국으로 변경하고 저장한다.
latitude: 36.32139,
longitude: 127.41972,
한국의 휴일
https://calendar.google.com/calendar/ical/ko.south_korea%23holiday%40group.v.calendar.google.com/public/basic.ics

module: "weather",
            position: "top_right", // 날씨 모듈 위치 (원하는 위치로 변경 가능)
            config: {
                weatherProvider: "openweathermap", // 오픈웨더 사용
                type: "current", // 현재 날씨 표시
                apiKey: "YOUR_API_KEY_HERE", // 여기서 YOUR_API_KEY_HERE를 실제 API 키로 대체
                lat: 36.3504, // 대전의 위도
                lon: 127.3845, // 대전의 경도
                location: "Daejeon, South Korea", // 위치 이름
                units: "metric" // 섭씨 사용
            }


~$  npm run start
매직미러를 실행 시켜 보자. 

2. 마이크, 스피커 확인
먼저 오디오 장치들이 제대로 인식 되어 있는지 확인 한다. 
aplay -l 와 arecord -l 를 이용 장치들이 정상적으로 잡혀 있는지 체크해 본다.  

각각의 card, device 번호 확인
스피커테스트
~$  speaker-test -t wav

마이크 사용을 위한 패키지 설치
~$ sudo apt-get install sox

녹음하기
~$ rec sample.wav

녹음 재생하기
~$ play sample.wav

~$ nano .asoundrc  //장치 설정
     pcm.!default {	
      type asym	
      capture.pcm "mic"	
      playback.pcm "speaker"	
    }	
    pcm.mic {	
      type plug	
      slave {	
        pcm "hw:1,0"	
      }	
    }	
    pcm.speaker {	
      type plug	
      slave {	
        pcm "hw:0,0"	
      }	
    }	


3. GoogleAssistant 설치
bugsounet/MMM-GoogleAssistant
https://wiki.bugsounet.fr/en/MMM-GoogleAssistant //참고

3-1. 핫워드 음성인식을 위해서 EXT-Detector 설치
~$ cd ~/MagicMirror/modules/
~$ git clone https://github.com/bugsounet/EXT-Detector
~$ cd  EXT-Detector
~$ npm install


3-2.구글 어시스턴트 모듈 설치 
~$ cd ~/MagicMirror/modules
~$ git clone https://github.com/bugsounet/MMM-GoogleAssistant
~$ cd MMM-GoogleAssistant
~$ npm install
설치 과정에 몇가지 질문이 나온다. > yes 

4. 구글 어시스턴트 Credentials Setup
https://wiki.bugsounet.fr/MMM-GoogleAssistant/SetupCredentials 참고
	https://console.actions.google.com/
	https://console.cloud.google.com/
동의화면 만들고 나서 반드시 '앱게시'를 해줘야 아래 다음 단계 '인증오류'가 발생하지 않는다.
프로젝트에서 생성된  .json 파일을 받아  credentials.json로 이름변경 > 
MMM-GoogleAssistant 폴더안에 복사해 놓는다



5. 매직미러 실행

~/MagicMirror/config/config.js파일을 열어서 편집(첨부)
MMM-GoogleAssistant
MMM-Detector
모듈 추가 이후 저장


구글 어시스턴트 토큰 생성

~$ cd ~/MagicMirror/modules/MMM-GoogleAssistant

~$ npm run token > 정상이면 구글 인증 > 토큰 복사 붙여넣기
오류 없으면 
~$ npm start


/* Config Sample
 *
 * For more information on how you can configure this file
 * see https://docs.magicmirror.builders/configuration/introduction.html
 * and https://docs.magicmirror.builders/modules/configuration.html
 *
 * You can use environment variables using a `config.js.template` file instead of `config.js`
 * which will be converted to `config.js` while starting. For more information
 * see https://docs.magicmirror.builders/configuration/introduction.html#enviromnent-variables
 */
let config = {
	address: "localhost",	// Address to listen on, can be:
							// - "localhost", "127.0.0.1", "::1" to listen on loopback interface
							// - another specific IPv4/6 to listen on a specific interface
							// - "0.0.0.0", "::" to listen on any interface
							// Default, when address config is left out or empty, is "localhost"
	port: 8080,
	basePath: "/",	// The URL path where MagicMirror² is hosted. If you are using a Reverse proxy
									// you must set the sub path here. basePath must end with a /
	ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"],	// Set [] to allow all IP addresses
									// or add a specific IPv4 of 192.168.1.5 :
									// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
									// or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
									// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

	useHttps: false,			// Support HTTPS or not, default "false" will use HTTP
	httpsPrivateKey: "",	// HTTPS private key path, only require when useHttps is true
	httpsCertificate: "",	// HTTPS Certificate path, only require when useHttps is true

	language: "en",
	locale: "en-US",
	logLevel: ["INFO", "LOG", "WARN", "ERROR"], // Add "DEBUG" for even more logging
	timeFormat: 24,
	units: "metric",

	modules: [
		{
			module: "alert",
		},
		{
			module: "updatenotification",
			position: "top_bar"
		},
		{
			module: "clock",
			position: "top_left"
		},
		{
			module: "calendar",
			header: "US Holidays",
			position: "top_left",
			config: {
				calendars: [
					{
						fetchInterval: 7 * 24 * 60 * 60 * 1000,
						symbol: "calendar-check",
						url: "https://ics.calendarlabs.com/76/mm3137/US_Holidays.ics"
					}
				]
			}
		},
		{
			module: "compliments",
			position: "lower_third"
		},
		{
			module: "weather",
			position: "top_right",
			config: {
				weatherProvider: "openmeteo",
				type: "current",
				lat: 40.776676,
				lon: -73.971321
			}
		},
		{
			module: "weather",
			position: "top_right",
			header: "Weather Forecast",
			config: {
				weatherProvider: "openmeteo",
				type: "forecast",
				lat: 40.776676,
				lon: -73.971321
			}
		},
		{
			module: "newsfeed",
			position: "bottom_bar",
			config: {
				feeds: [
					{
						title: "New York Times",
						url: "https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml"
					}
				],
				showSourceTitle: true,
				showPublishDate: true,
				broadcastNewsFeeds: true,
				broadcastNewsUpdates: true
			}
		},
	]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") { module.exports = config; }


자동실행
1. pm2를 이용한 자동 실행 설정 (추천 방법)
PM2는 프로세스를 관리하는 도구로, 매직미러를 자동 실행하는 데 많이 사용
1) PM2 설치
npm install -g pm2

2) 매직미러 실행 스크립트 만들기
pm2 start ~/MagicMirror/mm.sh
pm2 save
pm2 startup
그러면 PM2가 자동 실행을 위한 명령을 출력할 거야. 거기 나오는 명령을 그대로 실행하면 돼. 예를 들어:
sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u pi --hp /home/pi
(사용자 이름이 pi가 아니라면 pi 부분을 자신의 사용자명으로 변경)

3) 재부팅 후 확인
라즈베리를 재부팅하고, 자동 실행되는지 확인:

sudo reboot
부팅 후 정상적으로 실행되는지 확인하려면:

pm2 list

만약 실행되지 않는다면, 수동으로 실행하고 다시 저장:

pm2 start ~/MagicMirror/mm.sh
pm2 save

