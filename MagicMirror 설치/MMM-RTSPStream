1. 모듈 설치
cd ~/MagicMirror/modules
git clone https://github.com/shbatm/MMM-RTSPStream.git
cd MMM-RTSPStream
npm install

2. 설정 파일 수정 설치 후 config.js에서 아래와 같이 설정을 추가
{
    module: "MMM-RTSPStream",
    position: "middle_center",
    config: {
        autoStart: true,
        rotateStreams: false,
        rotateStreamTimeout: 10,
        moduleWidth: 640,
        moduleHeight: 480,
        localPlayer: "omxplayer",
        stream1: {
            name: 'Webcam',
            url: 'rtsp://localhost:8554/webcam',
            frameRate: '30',
            width: 640,
            height: 480,
            autoStart: true,
            rotateStreams: false
        }
    }
}

3.웹캠 스트림 설정 로컬 웹캠의 RTSP 스트림 URL을 알아낸 뒤 url 필드에 입력해야 합니다. 
sudo apt-get install ffmpeg


camera.py코드

import cv2
import subprocess

# 웹캠 열기
cap = cv2.VideoCapture(0)

# ffmpeg로 RTSP 스트림 송출 명령어
command = [
    'ffmpeg',
    '-re',  # 실시간 스트리밍
    '-i', '-',  # 표준 입력에서 비디오 프레임을 가져옴
    '-vcodec', 'libx264',
    '-preset', 'ultrafast',
    '-f', 'rtsp',
    'rtsp://localhost:8554/webcam'  # 로컬 호스트에서 RTSP 스트림 생성
]

# ffmpeg 프로세스 시작
process = subprocess.Popen(command, stdin=subprocess.PIPE)

# 웹캠 프레임을 읽어서 ffmpeg로 전달
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # 프레임을 ffmpeg 프로세스에 전달
    process.stdin.write(frame.tobytes())

# 종료 처리
cap.release()
process.stdin.close()
process.wait()

위 코드는 OpenCV를 사용하여 웹캠에서 비디오 프레임을 읽고, 
ffmpeg를 통해 RTSP 스트림으로 송출합니다. 
여기서 RTSP URL은 rtsp://localhost:8554/webcam입니다.

MMM-RTSPStream 모듈에서 RTSP URL 사용하기
위에서 설정한 rtsp://localhost:8554/webcam URL을 MMM-RTSPStream 모듈의 config.js에 입력합니다.

camera.py를 실행하여 스트림을 송출한 후에 스마트미러를 실행해야 합니다.
camera.py와 MMM-RTSPStream 모두 같은 장치에서 실행 중일 경우, 성능에 영향을 줄 수 있으니 주의하세요.
