데이터 설명
asset_id: 자산 ID
purchase_price: 구매 가격
current_value: 현재 가치
depreciation: 감가상각


데이터 생성 코드

import pandas as pd

# 예시 데이터 생성
asset_data = {
    'asset_id': [101, 102, 103, 104, 105],
    'purchase_price': [10000, 15000, 20000, 25000, 30000],
    'current_value': [8000, 14000, 18000, 23000, 28000],
    'depreciation': [2000, 1000, 2000, 2000, 2000]
```python
    'depreciation': [2000, 1000, 2000, 2000, 2000]
}

# 데이터프레임 생성
asset_df = pd.DataFrame(asset_data)

# CSV 파일로 저장
asset_df.to_csv('asset_data.csv', index=False)








자산을 평가하고 관리하기 위해 랜덤 포레스트 회귀 모델을 사용하는 코드

from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
import pandas as pd

# 데이터 로드
data = pd.read_csv('asset_data.csv')

# 피처와 타겟 변수 분리
X = data.drop('asset_value', axis=1)
y = data['asset_value']

# 데이터 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 모델 학습: 랜덤 포레스트 회귀 사용
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# 예측 및 평가
y_pred = model.predict(X_test)
print("R2 Score:", model.score(X_test, y_test))

RandomForestRegressor: 랜덤 포레스트 회귀 모델을 사용하여 자산 가치를 예측.
train_test_split: 데이터를 학습용과 테스트용으로 분할.
