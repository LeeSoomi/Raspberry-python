위험 관리를 위해 금융 데이터를 분석하고 잠재적 위험을 예측하는 Python 코드입니다.
데이터 전처리와 RandomForestClassifier를 사용하여 위험을 예측


import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

# 데이터 로드
data = pd.read_csv('financial_data.csv')

# 데이터 전처리: 금액 데이터에 로그 변환 적용
data['log_amount'] = data['amount'].apply(lambda x: np.log(x+1))

# 피처와 타겟 변수 분리
X = data[['log_amount', 'feature1', 'feature2']]
y = data['risk']

# 데이터 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 모델 학습: 랜덤 포레스트 분류기 사용
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# 예측 및 평가
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))





financial_data.csv 파일은 금융 거래 데이터를 포함하며, 
각 거래에 대해 금액과 몇 가지 피처들을 포함합니다. 
또한, 각 거래의 위험 수준을 나타내는 타겟 변수가 있습니다. 예시 데이터는 다음과 같습니다:


예시 데이터 (financial_data.csv)

amount: 거래 금액
feature1, feature2: 거래와 관련된 추가적인 피처 (예: 거래 유형, 시간 등)
risk: 거래의 위험 수준 (0: 낮음, 1: 높음)



import pandas as pd

# 예시 데이터 생성
data = {
    'amount': [1500, 2000, 2500, 1800, 3000],
    'feature1': [0.5, 0.7, 0.6, 0.4, 0.8],
    'feature2': [1.2, 1.5, 1.3, 1.1, 1.7],
    'risk': [0, 1, 0, 1, 0]
}

# 데이터프레임 생성
df = pd.DataFrame(data)

# CSV 파일로 저장
df.to_csv('financial_data.csv', index=False)



설명
data['log_amount']: 금액 데이터를 로그 변환하여 스케일 조정.
train_test_split: 데이터를 학습용과 테스트용으로 분할.
RandomForestClassifier: 랜덤 포레스트 모델을 사용하여 위험 예측.
classification_report: 모델의 예측 성능 평가.
