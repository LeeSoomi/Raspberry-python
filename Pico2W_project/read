*******   싫제 사용되는 코드   **************
Pico2 W > main.py
라즈베리파이 > central_traffic_with_hb.py


하드웨어/소프트웨어 준비

1. Pico2 W 사용법
    1) Python 기반 개발 환경을 위한 펌웨어
        https://micropython.org/resources/firmware/RPI_PICO_W-20250911-v1.26.1.uf2
       보드의 버튼을 누른상태로 PC연결  >>  PC에서  2040연결됨  >>
        위 링크에서 받은 파일을 보드로 복사+붙여넣기 
    2) PC에서 Tonny 설치 
        - 설치 + 보드PC연결 >> Tonny 메뉴 > Run > Configration > Port or WedREPL 에서 연결된 보드선택
            main.py 전체 붙여넣고 다른이름으로 저장 > Pc가 아닌 보드에 저장 (현재 저장되어있음)
        - OLED 사용을 위해 ssd1306 설치 :  메뉴  > Tools > Manage Package 에서 ssd1306 검색 후 설치 (현재 되어있음)
        - 네트워크: 라즈베리파이와 같은 SSID에 연결 (동일 서브넷) amin.py 내부에서 설정
            Pico 2 W → OLED (I²C), 3V3 → VCC, GND → GND, GP0 → SDA,  GP1 → SCL

            
    실행방법 : Tonny 터미널에서 Ctrl + D 또는 보드의 버튼 누르기 ( main.py 는 전원만 연결되면 자동실행되는 구조 )

2.  라즈베리파이 5 (중앙) 
    OS: 라즈비안/라즈베리Pi OS - 현재 imager 최신 32bit
    Python 3.x (표준 모듈만 사용: socket, json, time)
    네트워크: Pico와 같은 SSID에 연결 (동일 서브넷)

    0) 네트워크 전제
        - 라즈베리파이와 모든 Pico 2 W가 같은 2.4GHz 네트워크/서브넷에 있어야 함
        - 공유기에서 UDP 브로드캐스트 허용 (차단 옵션 꺼짐)
        - (UFW 등 방화벽을 쓰는 경우만) UDP 5005, 5006 허용 
        # UFW 사용하는 경우에만
        sudo ufw allow 5005/udp
        sudo ufw allow 5006/udp

    1) 라즈베리 파이 OS 기본 설정
        sudo raspi-config
        # 1 System Options -> WLAN Country 설정 (Wi‑Fi 전파법 규정)
        # 5 Localisation Options -> Timezone 설정 (로그 시간 맞춤)
        # Finish 후 재부팅

    2) Python 설정  
        라즈베리 OS 기본 Python3로 충분해요. 단, 가상환경은 권장(충돌 방지).
        # 최신 패키지 목록 동기화(선택)
        sudo apt-get update
        # 파이썬3 기본 설치 확인
        python3 --version
        # 프로젝트 폴더 준비
        mkdir -p ~/COS && cd ~/COS
        # 가상환경 만들기
        python3 -m venv .venv
        source .venv/bin/activate (활성)
        
        # 스크립트 파일 배치
        # central_traffic_with_hb.py 를 home/codestudio/COS 저장
        >>  /home/codestudio/COS/central_traffic_with_hb.py

        실행법 :
            cd /home/codestudio/COS
            source .venv/bin/activate      
            python central_traffic_with_hb.py

-----------------------------------

Q n A

1) 시스템/아키텍처

    Q. 전체 구성은? 데이터 흐름은?
    
        차량 단말(예: Pico W) ⟷ AP(무선) ⟷ 중앙 컨트롤러(라즈베리/서버).
        중앙은 주기적으로 신호 상태를 브로드캐스트(UDP 멀티캐스트/브로드캐스트), 차량은 대기 상태일 때 1 Hz로 ACK(UDP).
        지연 목표: 신호 방송→차량 표기 <100 ms, 차량 ACK→중앙 집계 <200 ms.
    
    Q. 왜 Wi-Fi(2.4/5 GHz)인가?
        장점: 대역폭 여유, 소프트웨어 스택 풍부, AP를 이용한 중앙집중 관리 용이.
        단점: 혼잡/간섭, 결정적 지연 보장 어려움. QoS(WMM), 채널 플래닝, 멀티-AP로 완화.
        (비교 질문 대비) BLE보다 중앙 브로드캐스트 범위/관리성 유리, C-V2X/5G보다 배포 비용/복잡도 낮음.
        
    Q. 통신 프로토콜?
        L2: 802.11n/ac, 인프라 모드.
        L3/4: UDP (실시간성), 메시지는 CBOR/JSON(가볍고 가시성 좋음).
        브로드캐스트: UDP 멀티캐스트(예: 239.x) + AP IGMP 스누핑 켜기.

2) 시간/실시간성/신뢰성

    Q. 지연·지터 예산은?
        방송→차량: 무선 큐잉+전파+처리 p50 <30 ms / p95 <80 ms 목표.
        ACK→중앙: p95 <150 ms. 측정은 동일 NTP 소스 동기화 후 RTT/원웨이 분리.
        
    Q. 패킷 손실/간섭 시?
        방송: 1 Hz 이상 중복 전송, seq/TTL 포함해 최신만 적용.
        ACK: 슬라이딩 윈도(예: 3 s) 누적 카운트. 0.3 s 백-오프 지터로 동시전송 충돌 완화.
        Fallback: 통신 불가 시 고정주기(예: GREEN=5 s) 로 자동 전환, 알람.
    
    Q. 동기화?
        중앙=NTP(가능하면 PTP), 차량은 상대 시간 사용. 메시지에 서버 타임스탬프 포함.

3) 확장성/배치

Q. AP/채널 설계는?
    2.4 GHz 혼잡 구역은 채널 1/6/11 고정, 단말수 많으면 5 GHz 분산.
    클라이언트 아이솔레이션 ON(단말간 트래픽 차단), 컨트롤러 서버만 접근 허용.
    멀티-AP 로밍: 동일 SSID/보안, 타임크리티컬은 멀티캐스트로 로밍 영향 최소화.
    
Q. 몇 대까지?
    ACK 1 Hz, 패킷 <120 B 가정 시 AP당 수백 대 가능. 병목은 에어타임 → 비콘 간격/DTIM 최적화.

4) 제어 알고리즘/교통공학

    Q. 차량이 많으면 GREEN 8 초가 되면 다른 방향은?
        주기 고정(예: 20 s) 원칙. 여유 방향에서 초 단위 재분배(도너 1 s 한도). 모두 혼잡이면 모두 5 s 유지.
        최소/최대 녹색(MIN=4, MAX=8), 연속 우대 제한(예: 3회), 크레딧 이월로 공정성 보장.

    Q. 비상차량/버스 우선?
        프리엠션 입력을 별도 주고(예: GPIO/REST), 현재 사이클을 ALL-RED→우선 GREEN으로 전환. 로깅 필수.

    Q. 실패 안전?
        하드 오류 시 ALL-RED 고정, 수동 스위치로 현장 개입. 워치독/헬스체크.

5) 보안(네트워크/펌웨어)

    Q. 무선 보안?
        WPA3-Enterprise(EAP-TLS, 802.1X) 권장(소규모는 WPA2-PSK/SAE).
        L4 이상 TLS 1.3(mTLS) 로 API 접근 보호(단말-서버 상호 인증).
        
    Q. 단말 인증/프로비저닝?
        공장-주입(per-device cert/키), 최초 부팅 시 짧은 수명 등록 토큰.
        키 회전/폐기(CRL/OCSP), 분실 단말 즉시 철회.
        
    Q. 업데이트?
        서명된 펌웨어/OTA(A/B 파티션), SBOM 관리, 롤백 지원.
        
    Q. 공격 모델?
        DoS(Deauth/채널 점유), ARP/MDNS 오염, 스푸핑(ACK 위조).
            → 관리망/운영망 분리, AP 보호 모드, ACK에 nonce+HMAC(서버 시크릿) 포함.

6) 개인정보/컴플라이언스 (Wi-Fi 기준)
    
    Q. 어떤 개인정보를 수집하나? 법적 근거는?
        설계상 개인식별정보를 수집하지 않음(원칙). 차량 단말은 제조된 임의 ID만 사용, 사용자/차량 번호/얼굴/영상 없음.
        Wi-Fi 스니핑을 하지 않고, 인프라 연결된 등록 단말만 카운트.
        법적 근거: 정당한 이익 또는 공익/안전(관할 지자체 프로젝트 시).
        (국내: 개인정보보호법(PIPA), EU: GDPR – 정당한 이익 판단 + DPIA 권고)
        
    Q. MAC 주소는 개인정보 아닌가?
        랜덤/암호화된 단말 ID만 사용하고 원시 MAC을 저장하지 않음.
        중앙 저장은 집계치(분/사이클 단위 카운트) 와 해시(HMAC-SHA256, 일 단위 salt 회전) 만. 원시 식별자 로그 미남기기.
        
    Q. 보유기간/권리행사?
        원시 이벤트 실시간 처리 후 즉시 폐기, 집계 데이터 최대 30일(예시).
        안내 표지/웹 페이지에 처리 목적·담당자·연락처 공지, 열람/삭제 요청 경로 제공.
        
    Q. 위치추적 우려?
        단말-고정 위치 매핑을 금지하고(정책), K-익명(예: k≥5) 조건 미충족 구간은 공개 리포트에서 마스킹.

7) 테스트/검증

    Q. 어떻게 검증했나?
        시뮬레이터 + 파일럿 현장 테스트: 에어타임/손실률/지연 분포 측정.
        실패 주입: AP 오프라인, 지터 폭주, 패킷 드롭 10–30 % 시나리오.
        KPI: 차로당 평균 대기시간, 95% 지연, 사이클 이행률, 가용성(99.9%).
    
    Q. 시뮬과 실측의 갭?
        간섭·다중경로·로밍이 실측에서 커짐. 보수적 파라미터로 보정(멀티캐스트 주기, 재전송 횟수).
    
8) 운영/유지보수/비용
    
    Q. 장애 대응/관제?
        중앙에 헬스 프로브(단말 하트비트 10 s), 경보(슬랙/문자).
        관제 대시보드: 링크 상태, ACK 카운트, 신호 상태, 알람 이력.
    
     Q. 비용/효율?
        AP + 단말 보드 + 전원. Wi-Fi 사용으로 추가 면허/백홀 비용 無.
        단말 평균 소비전력 <200 mW(추측입니다), 전력은 보드/화면에 따라 상이.

9) 비교/대안 질의에 대비

    Q. 왜 BLE/LoRa/C-V2X가 아니라 Wi-Fi?
    
        BLE: 저전력/근거리, 브로드캐스트 관리 난이도↑.
        LoRa: 저대역폭, 실시간 제어 부적합.
        C-V2X/5G: 최상, 비용·인증/인프라 부담 큼.
        시민 시험/교내 실증 단계에선 Wi-Fi가 공학적·경제적 타협.
    
    Q. 영상/번호판 인식과의 차이/장단점?
        영상은 개인정보·환경 의존성 큼. 본 프로젝트는 비식별·신호 수준 판단에 초점.

------------    

쉬우면서도 심사에서 나올 법한 질문 & 짧은 답

Q1. 여러 방향이 다 막히면 전체 시간이 늘어나나요?
    A. 아니요. 총시간은 고정이고, 서로 주고받기만 해요.

Q2. 한쪽만 계속 이득 보면 불공평한 거 아니에요?
    A. 최소/최대 초와 연속 우대 제한, 적립-환급으로 공정함을 맞춰요.

Q3. 와이파이 끊기면 위험하잖아요?
    A. 끊기면 즉시 기본 시간표로 복귀합니다. 필요하면 모두 빨강도 가능.

Q4. 개인 정보는 안전한가요?
    A. 개인식별 정보는 수집하지 않음. 임의 ID만 쓰고 집계만 저장합니다.

Q5. 실제 도로에서도 쓸 수 있나요?
    A. 학교·캠퍼스·테스트베드에서 프로토타입으로 적합. 실제 도로는 법/규정에 맞춰 감시·안전장치가 더 필요합니다.

Q6. 왜 Wi-Fi지, 블루투스/카메라/5G 말고?
    A. 실험/교육 목적에선 쉽고 빠르고 저렴. 카메라는 개인정보·날씨 영향 큼, 5G는 비용/복잡도 큼.
