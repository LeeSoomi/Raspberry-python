전체 구성도
라즈베리파이 5 (신호등 제어)
├─ Mosquitto MQTT Broker (메시지 중개)
├─ Python 신호 제어 프로그램
└─ WiFi 공유기와 연결

         ↕️ (WiFi 네트워크)

피코 2 W (차량 단말 × 3대)
├─ MQTT Client (신호 구독)
├─ OLED 화면 표시
└─ ACK 메시지 발행


1단계: 라즈베리파이 준비
1-1. WiFi 연결 확인
bash# WiFi 상태 확인
iwconfig

# IP 주소 확인 (나중에 필요)
hostname -I    # 192.168.0.104
# 출력 예시: 192.168.1.100
이 IP 주소를 메모하세요!

1-2. MQTT 브로커 설치
bash# Mosquitto 설치
sudo apt update
sudo apt install -y mosquitto mosquitto-clients

# 자동 시작 활성화
sudo systemctl enable mosquitto
sudo systemctl start mosquitto

# 상태 확인
sudo systemctl status mosquitto
# Active: active (running) 확인

1-3. 방화벽 확인 (필요시)
bash# 1883 포트 열기
sudo ufw allow 1883

# 또는 방화벽 비활성화 (테스트용)
sudo ufw disable

1-4. MQTT 테스트
터미널 1 (구독자):
bashmosquitto_sub -h localhost -t "test"
터미널 2 (발행자):
bashmosquitto_pub -h localhost -t "test" -m "Hello MQTT"
터미널 1에 "Hello MQTT"가 출력되면 성공!

--------------------------------------

2단계: 피코 2 W 준비
2-1. 라이브러리 설치
Thonny IDE에서:

Tools → Manage packages...
검색창에 umqtt.simple 입력
Install 클릭

2-2. WiFi 연결 테스트
# wifi_test.py
import network
import time

# WiFi 설정 (본인의 WiFi 정보로 수정)
SSID = "your_wifi_name"
PASSWORD = "your_wifi_password"

wlan = network.WLAN(network.STA_IF)
wlan.active(True)

print("Connecting to WiFi...")
wlan.connect(SSID, PASSWORD)

# 연결 대기
timeout = 10
while timeout > 0:
    if wlan.isconnected():
        break
    print(".", end="")
    time.sleep(1)
    timeout -= 1

if wlan.isconnected():
    print("\nWiFi Connected!")
    print("IP:", wlan.ifconfig()[0])
    print("Gateway:", wlan.ifconfig()[2])
else:
    print("\nWiFi Connection Failed!")
F5 실행 → IP 주소가 출력되면 성공


2-3. MQTT 연결 테스트
python
# mqtt_test.py
import network
import time
from umqtt.simple import MQTTClient

# WiFi 연결 (위와 동일)
SSID = "your_wifi_name"
PASSWORD = "your_wifi_password"
MQTT_SERVER = "192.168.1.100"  # 라즈베리파이 IP

wlan = network.WLAN(network.STA_IF)
wlan.active(True)
wlan.connect(SSID, PASSWORD)

while not wlan.isconnected():
    time.sleep(1)

print("WiFi Connected")

# MQTT 콜백
def on_message(topic, msg):
    print(f"Received: {msg.decode()}")

# MQTT 연결
client = MQTTClient("pico_test", MQTT_SERVER)
client.set_callback(on_message)
client.connect()
client.subscribe(b"test")

print("Subscribed to 'test' topic")

# 메시지 대기
while True:
    client.check_msg()
    time.sleep(0.1)

-------------------------
피코에서 실행 후, 라즈베리파이에서:
bashmosquitto_pub -h localhost -t "test" -m "Hello Pico"

-----------------------
python
# traffic_controller.py
import paho.mqtt.client as mqtt
import time
from collections import defaultdict

class TrafficController:
    def __init__(self, direction):
        self.direction = direction
        self.waiting_cars = defaultdict(int)
        
        # MQTT 클라이언트
        self.client = mqtt.Client()
        self.client.on_message = self.on_ack_message
        self.client.connect("localhost", 1883)
        
        # ACK 토픽 구독
        self.client.subscribe(f"traffic/{direction}/ack")
        
        # 백그라운드 메시지 수신
        self.client.loop_start()
        
        print(f"Traffic Controller for {direction} started")
    
    def on_ack_message(self, client, userdata, msg):
        """차량 ACK 수신"""
        payload = msg.payload.decode('utf-8')
        # "P|D:N|UID:abc123|C:1" 형식
        if payload.startswith('P|'):
            parts = dict(p.split(':') for p in payload.split('|')[1:])
            uid = parts.get('UID')
            if uid:
                self.waiting_cars[uid] += 1
                print(f"[ACK] {uid}")
    
    def publish_signal(self, state, remaining_time, q_flag):
        """신호 발행"""
        topic = f"traffic/{self.direction}/signal"
        payload = f"DIR:{self.direction}|T:{state}|RT:{remaining_time}|Q:{q_flag}"
        self.client.publish(topic, payload)
        print(f"[TX] {payload}")
    
    def calculate_green_time(self):
        """대기 차량 수에 따라 GREEN 시간 결정"""
        count = len(self.waiting_cars)
        return 8 if count >= 3 else 5
    
    def run_cycle(self):
        """신호 사이클 실행"""
        while True:
            # RED (대기 윈도우)
            self.waiting_cars.clear()
            for t in range(20, 0, -1):
                self.publish_signal('RED', t, q_flag=1)
                time.sleep(1)
            
            # GREEN 시간 결정
            green_time = self.calculate_green_time()
            print(f"Waiting cars: {len(self.waiting_cars)} → GREEN {green_time}s")
            
            # GREEN
            for t in range(green_time, 0, -1):
                self.publish_signal('GREEN', t, q_flag=0)
                time.sleep(1)
            
            # YELLOW
            for t in range(2, 0, -1):
                self.publish_signal('YELLOW', t, q_flag=0)
                time.sleep(1)
            
            # ALLRED
            self.publish_signal('ALLRED', 1, q_flag=0)
            time.sleep(1)

# 실행
if __name__ == '__main__':
    import sys
    
    if len(sys.argv) < 2:
        print("Usage: python3 traffic_controller.py <N|E|S|W>")
        sys.exit(1)
    
    direction = sys.argv[1].upper()
    controller = TrafficController(direction)
    
    try:
        controller.run_cycle()
    except KeyboardInterrupt:
        print("\nStopped")
-----------------------------
실행:
bash
# paho-mqtt 설치
pip3 install paho-mqtt --break-system-packages

# 북쪽 신호등 시작
python3 traffic_controller.py N
-------------------------------------
피코에서 실행 후, 라즈베리파이에서:
bashmosquitto_pub -h localhost -t "test" -m "Hello Pico"
피코 쉘에 "Received: Hello Pico" 출력되면 성공!
