하드웨어/소프트웨어 준비

1. Pico2 W 사용법
    1) Python 기반 개발 환경을 위한 펌웨어
        https://micropython.org/resources/firmware/RPI_PICO_W-20250911-v1.26.1.uf2
       보드의 버튼을 누른상태로 PC연결  >>  PC에서  2040연결됨  >>
        위 링크에서 받은 파일을 보드로 복사+붙여넣기 
    2) PC에서 Tonny 설치 
        - 설치 + 보드PC연결 >> Tonny 메뉴 > Run > Configration > Port or WedREPL 에서 연결된 보드선택
            main.py 전체 붙여넣고 다른이름으로 저장 > Pc가 아닌 보드에 저장 (현재 저장되어있음)
        - OLED 사용을 위해 ssd1306 설치 :  메뉴  > Tools > Manage Package 에서 ssd1306 검색 후 설치 (현재 되어있음)
        - 네트워크: 라즈베리파이와 같은 SSID에 연결 (동일 서브넷) amin.py 내부에서 설정
            Pico 2 W → OLED (I²C), 3V3 → VCC, GND → GND, GP0 → SDA,  GP1 → SCL

            
    실행방법 : Tonny 터미널에서 Ctrl + D 또는 보드의 버튼 누르기 ( main.py 는 전원만 연결되면 자동실행되는 구조 )

2.  라즈베리파이 5 (중앙) 
    OS: 라즈비안/라즈베리Pi OS - 현재 imager 최신 32bit
    Python 3.x (표준 모듈만 사용: socket, json, time)
    네트워크: Pico와 같은 SSID에 연결 (동일 서브넷)

    0) 네트워크 전제
        - 라즈베리파이와 모든 Pico 2 W가 같은 2.4GHz 네트워크/서브넷에 있어야 함
        - 공유기에서 UDP 브로드캐스트 허용 (차단 옵션 꺼짐)
        - (UFW 등 방화벽을 쓰는 경우만) UDP 5005, 5006 허용 
        # UFW 사용하는 경우에만
        sudo ufw allow 5005/udp
        sudo ufw allow 5006/udp

    1) 라즈베리 파이 OS 기본 설정
        sudo raspi-config
        # 1 System Options -> WLAN Country 설정 (Wi‑Fi 전파법 규정)
        # 5 Localisation Options -> Timezone 설정 (로그 시간 맞춤)
        # Finish 후 재부팅

    2) Python 설정  
        라즈베리 OS 기본 Python3로 충분해요. 단, 가상환경은 권장(충돌 방지).
        # 최신 패키지 목록 동기화(선택)
        sudo apt-get update
        # 파이썬3 기본 설치 확인
        python3 --version
        # 프로젝트 폴더 준비
        mkdir -p ~/COS && cd ~/COS
        # 가상환경 만들기
        python3 -m venv .venv
        source .venv/bin/activate (활성)
        
        # 스크립트 파일 배치
        # central_traffic_with_hb.py 를 home/codestudio/COS 저장
        >>  /home/codestudio/COS/central_traffic_with_hb.py

        실행법 :
            cd /home/codestudio/COS
            source .venv/bin/activate      
            python central_traffic_with_hb.py

        

wifi_connect()
recv_loop()
----------------------------------------
