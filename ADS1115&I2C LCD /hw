하드웨어 연결
소리 센서 연결:

소리 센서의 VCC 핀 -> 라즈베리파이 3.3V 핀
소리 센서의 GND 핀 -> 라즈베리파이 GND 핀
소리 센서의 아날로그 출력 핀 -> ADS1115의 A0 핀
ADS1115와 라즈베리파이 연결:

ADS1115 VCC 핀 -> 라즈베리파이 3.3V 핀
ADS1115 GND 핀 -> 라즈베리파이 GND 핀
ADS1115 SDA 핀 -> 라즈베리파이 GPIO 2 (핀 3, SDA)
ADS1115 SCL 핀 -> 라즈베리파이 GPIO 3 (핀 5, SCL)
ADS1115 A0 핀 -> 소리 센서의 아날로그 출력 핀
I2C LCD와 라즈베리파이 연결:

I2C LCD VCC 핀 -> 라즈베리파이 3.3V 핀
I2C LCD GND 핀 -> 라즈베리파이 GND 핀
I2C LCD SDA 핀 -> 라즈베리파이 GPIO 2 (핀 3, SDA)
I2C LCD SCL 핀 -> 라즈베리파이 GPIO 3 (핀 5, SCL)



sudo pip3 install adafruit-blinka



import time
import board
import busio
from adafruit_ads1x15.ads1115 import ADS1115
from adafruit_ads1x15.analog_in import AnalogIn
import adafruit_character_lcd.character_lcd_i2c as character_lcd

# I2C 초기화
i2c = busio.I2C(board.SCL, board.SDA)

# ADS1115 초기화 (주소 0x48)
ads = ADS1115(i2c, address=0x48)
chan = AnalogIn(ads, ADS1115.P0)

# I2C LCD 초기화 (주소 0x27)
lcd_columns = 16
lcd_rows = 2
lcd = character_lcd.Character_LCD_I2C(i2c, lcd_columns, lcd_rows, address=0x27)

# 데이터를 읽어와서 LCD에 출력
while True:
    sound_level = chan.value    # ADC 값을 읽음
    voltage = chan.voltage      # 전압으로 변환
    lcd.clear()
    lcd.message = f"Sound: {sound_level}\nVoltage: {voltage:.2f}V"
    time.sleep(1)  # 1초마다 갱신



추가 라이브러리
sudo pip3 install adafruit-circuitpython-ads1x15
sudo pip3 install adafruit-circuitpython-charlcd


Python 3.8 설치
sudo apt-get update
sudo apt-get install -y python3.8 python3.8-venv python3.8-dev


가상환경 생성 및 활성화
python3.8 -m venv myenv
source myenv/bin/activate

pip install adafruit-blinka adafruit-circuitpython-ads1x15 adafruit-circuitpython-charlcd

코드
import time
import board
import busio
from adafruit_ads1x15.ads1115 import ADS1115
from adafruit_ads1x15.analog_in import AnalogIn
import adafruit_character_lcd.character_lcd_i2c as character_lcd

# I2C 초기화
i2c = busio.I2C(board.SCL, board.SDA)

# ADS1115 초기화 (주소 0x48)
ads = ADS1115(i2c, address=0x48)
chan = AnalogIn(ads, ADS1115.P0)

# I2C LCD 초기화 (주소 0x27)
lcd_columns = 16
lcd_rows = 2
lcd = character_lcd.Character_LCD_I2C(i2c, lcd_columns, lcd_rows, address=0x27)

# 데이터를 읽어와서 LCD에 출력
while True:
    sound_level = chan.value    # ADC 값을 읽음
    voltage = chan.voltage      # 전압으로 변환
    lcd.clear()
    lcd.message = f"Sound: {sound_level}\nVoltage: {voltage:.2f}V"
    time.sleep(1)  # 1초마다 갱신



Python 3.8 소스 코드 설치 방법
필수 패키지 설치
sudo apt-get update
sudo apt-get install -y build-essential checkinstall
sudo apt-get install -y libreadline-gplv2-dev libncursesw5-dev libssl-dev \
                        libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev \
                        libffi-dev zlib1g-dev

Python 3.8 소스 코드 다운로드
sudo wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz
sudo tar xzf Python-3.8.0.tgz

Python 3.8 컴파일 및 설치
cd Python-3.8.0
sudo ./configure --enable-optimizations
sudo make altinstall

설치 확인
python3.8 --version


가상환경 생성 및 활성화
python3.8 -m venv myenv
source myenv/bin/activate

필요한 라이브러리 설치
pip install adafruit-blinka adafruit-circuitpython-ads1x15 adafruit-circuitpython-charlcd



